from Libraries.Plugins.DataHandler import DataGenerator
from Libraries.Framework.Utils import PageBase
import pytest


# Định nghĩa hàm utility update_Data
def update_data(file_path, path, data_type):
    updated, error_message = DataGenerator.update_json_value(file_path, path, data_type)
    assert updated, error_message


# Fixture để load dữ liệu từ file JSON
@pytest.fixture
def path_case():
    def _path(name_file_json):
        return PageBase.load_path_data_file_from_path("Datas_Case", name_file_json)

    return _path


@pytest.fixture
def path_fs():
    def _path(name_file_json):
        return PageBase.load_path_data_file_from_path("Datas_Case", name_file_json)

    return _path


@pytest.fixture
def path_chat():
    def _path(name_file_json):
        return PageBase.load_path_data_file_from_path("Datas_Chat", name_file_json)

    return _path


@pytest.fixture
def path_lpr():
    def _path(name_file_json):
        return PageBase.load_path_data_file_from_path("Datas_FS", name_file_json)

    return _path


@pytest.mark.AutoGenerateData
class TestCase:
    def test_update_data_thu_vien_vu_viec(self, path_case):
        update_data(path_case("Test_VuViec.json"), ['test_CreateVuViec', 0, 'Data', 0, 'Value'], 'custom_VV')
        update_data(path_case("Test_VuViec.json"), ['test_DeleteVuViec', 0, 'Data', 0, 'Value'], 'custom_VV')
        update_data(path_case("Test_VuViec.json"), ['test_UpdateDoiTuongVuViec', 0, 'Data', 0, 'Value'],
                    'custom_VV')
        update_data(path_case("Test_VuViec.json"), ['test_UpdateNanNhanVuViec', 0, 'Data', 0, 'Value'],
                    'custom_VV')
        update_data(path_case("Test_VuViec.json"), ['test_UpdatePhuongTienVuViec', 0, 'Data', 0, 'Value'],
                    'custom_VV')
        update_data(path_case("Test_VuViec.json"), ['test_UpdateFileDinhKem', 0, 'Data', 0, 'Value'],
                    'custom_VV')
        update_data(path_case("Test_VuViec.json"), ['test_UpdateFileDinhKem', 0, 'Data', 0, 'Value'],
                    'custom_VV')


@pytest.mark.AutoGenerateData
class TestChat:
    def test_update_data_chat(self, path_chat):
        update_data(path_chat("Test_Chat.json"), ['test_publish_channel', 0, 'channel_name'], 'custom_KCK'),
        update_data(path_chat("Test_Chat.json"), ['test_publish_channel', 0, 'random_text'], 'alphanumeric'),
        update_data(path_chat("Test_Chat.json"), ['test_private_channel', 0, 'channel_name'], 'custom_KRT'),
        update_data(path_chat("Test_Chat.json"), ['test_private_channel', 0, 'random_text'], 'alphanumeric'),
        update_data(path_chat("Test_Chat.json"), ['test_direct_message', 0, 'random_text'], 'alphanumeric')
